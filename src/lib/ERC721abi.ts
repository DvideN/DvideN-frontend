// ts-ignore
export const ERC721abi = {
  abi: [
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'approved',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Approval',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          indexed: false,
          internalType: 'bool',
          name: 'approved',
          type: 'bool',
        },
      ],
      name: 'ApprovalForAll',
      type: 'event',
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          indexed: true,
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'Transfer',
      type: 'event',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'approve',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      name: 'balanceOf',
      outputs: [
        {
          internalType: 'uint256',
          name: 'balance',
          type: 'uint256',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'getApproved',
      outputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
      ],
      name: 'isApprovedForAll',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'ownerOf',
      outputs: [
        {
          internalType: 'address',
          name: 'owner',
          type: 'address',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
        {
          internalType: 'bytes',
          name: 'data',
          type: 'bytes',
        },
      ],
      name: 'safeTransferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'operator',
          type: 'address',
        },
        {
          internalType: 'bool',
          name: '_approved',
          type: 'bool',
        },
      ],
      name: 'setApprovalForAll',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'bytes4',
          name: 'interfaceId',
          type: 'bytes4',
        },
      ],
      name: 'supportsInterface',
      outputs: [
        {
          internalType: 'bool',
          name: '',
          type: 'bool',
        },
      ],
      stateMutability: 'view',
      type: 'function',
    },
    {
      inputs: [
        {
          internalType: 'address',
          name: 'from',
          type: 'address',
        },
        {
          internalType: 'address',
          name: 'to',
          type: 'address',
        },
        {
          internalType: 'uint256',
          name: 'tokenId',
          type: 'uint256',
        },
      ],
      name: 'transferFrom',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
    },
  ],
  bytecode: {
    object: '0x',
    sourceMap: '',
    linkReferences: {},
  },
  deployedBytecode: {
    object: '0x',
    sourceMap: '',
    linkReferences: {},
  },
  methodIdentifiers: {
    'approve(address,uint256)': '095ea7b3',
    'balanceOf(address)': '70a08231',
    'getApproved(uint256)': '081812fc',
    'isApprovedForAll(address,address)': 'e985e9c5',
    'ownerOf(uint256)': '6352211e',
    'safeTransferFrom(address,address,uint256)': '42842e0e',
    'safeTransferFrom(address,address,uint256,bytes)': 'b88d4fde',
    'setApprovalForAll(address,bool)': 'a22cb465',
    'supportsInterface(bytes4)': '01ffc9a7',
    'transferFrom(address,address,uint256)': '23b872dd',
  },
  rawMetadata:
    '{"compiler":{"version":"0.8.13+commit.abaa5c0e"},"language":"Solidity","output":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``\'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":"IERC721"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[":@openzeppelin/=lib/openzeppelin-contracts/",":@superfluid-finance/ethereum-contracts/=lib/ethereum-contracts/packages/ethereum-contracts/",":ds-test/=lib/forge-std/lib/ds-test/src/",":ethereum-contracts/=lib/ethereum-contracts/",":forge-std/=lib/forge-std/src/",":scripts/=script/"]},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol":{"keccak256":"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68","license":"MIT","urls":["bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56","dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1","license":"MIT","urls":["bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f","dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"]}},"version":1}',
  metadata: {
    compiler: {
      version: '0.8.13+commit.abaa5c0e',
    },
    language: 'Solidity',
    output: {
      abi: [
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'approved',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'Approval',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'bool',
              name: 'approved',
              type: 'bool',
              indexed: false,
            },
          ],
          type: 'event',
          name: 'ApprovalForAll',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
              indexed: true,
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
              indexed: true,
            },
          ],
          type: 'event',
          name: 'Transfer',
          anonymous: false,
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'approve',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'balanceOf',
          outputs: [
            {
              internalType: 'uint256',
              name: 'balance',
              type: 'uint256',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'getApproved',
          outputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'isApprovedForAll',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'ownerOf',
          outputs: [
            {
              internalType: 'address',
              name: 'owner',
              type: 'address',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
            {
              internalType: 'bytes',
              name: 'data',
              type: 'bytes',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'safeTransferFrom',
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'operator',
              type: 'address',
            },
            {
              internalType: 'bool',
              name: '_approved',
              type: 'bool',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'setApprovalForAll',
        },
        {
          inputs: [
            {
              internalType: 'bytes4',
              name: 'interfaceId',
              type: 'bytes4',
            },
          ],
          stateMutability: 'view',
          type: 'function',
          name: 'supportsInterface',
          outputs: [
            {
              internalType: 'bool',
              name: '',
              type: 'bool',
            },
          ],
        },
        {
          inputs: [
            {
              internalType: 'address',
              name: 'from',
              type: 'address',
            },
            {
              internalType: 'address',
              name: 'to',
              type: 'address',
            },
            {
              internalType: 'uint256',
              name: 'tokenId',
              type: 'uint256',
            },
          ],
          stateMutability: 'nonpayable',
          type: 'function',
          name: 'transferFrom',
        },
      ],
      devdoc: {
        kind: 'dev',
        methods: {
          'approve(address,uint256)': {
            details:
              'Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.',
          },
          'balanceOf(address)': {
            details: "Returns the number of tokens in ``owner``'s account.",
          },
          'getApproved(uint256)': {
            details:
              'Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.',
          },
          'isApprovedForAll(address,address)': {
            details:
              'Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}',
          },
          'ownerOf(uint256)': {
            details:
              'Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.',
          },
          'safeTransferFrom(address,address,uint256)': {
            details:
              'Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.',
          },
          'safeTransferFrom(address,address,uint256,bytes)': {
            details:
              'Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.',
          },
          'setApprovalForAll(address,bool)': {
            details:
              'Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.',
          },
          'supportsInterface(bytes4)': {
            details:
              'Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.',
          },
          'transferFrom(address,address,uint256)': {
            details:
              'Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.',
          },
        },
        version: 1,
      },
      userdoc: {
        kind: 'user',
        methods: {},
        version: 1,
      },
    },
    settings: {
      remappings: [
        ':@openzeppelin/=lib/openzeppelin-contracts/',
        ':@superfluid-finance/ethereum-contracts/=lib/ethereum-contracts/packages/ethereum-contracts/',
        ':ds-test/=lib/forge-std/lib/ds-test/src/',
        ':ethereum-contracts/=lib/ethereum-contracts/',
        ':forge-std/=lib/forge-std/src/',
        ':scripts/=script/',
      ],
      optimizer: {
        enabled: true,
        runs: 200,
      },
      metadata: {
        bytecodeHash: 'ipfs',
      },
      compilationTarget: {
        'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': 'IERC721',
      },
      libraries: {},
    },
    sources: {
      'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol': {
        keccak256: '0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68',
        urls: [
          'bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56',
          'dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3',
        ],
        license: 'MIT',
      },
      'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol': {
        keccak256: '0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1',
        urls: [
          'bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f',
          'dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy',
        ],
        license: 'MIT',
      },
    },
    version: 1,
  },
  ast: {
    absolutePath: 'lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol',
    id: 29462,
    exportedSymbols: {
      IERC165: [30232],
      IERC721: [29461],
    },
    nodeType: 'SourceUnit',
    src: '108:4868:28',
    nodes: [
      {
        id: 29347,
        nodeType: 'PragmaDirective',
        src: '108:23:28',
        nodes: [],
        literals: ['solidity', '^', '0.8', '.0'],
      },
      {
        id: 29348,
        nodeType: 'ImportDirective',
        src: '133:47:28',
        nodes: [],
        absolutePath: 'lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol',
        file: '../../utils/introspection/IERC165.sol',
        nameLocation: '-1:-1:-1',
        scope: 29462,
        sourceUnit: 30233,
        symbolAliases: [],
        unitAlias: '',
      },
      {
        id: 29461,
        nodeType: 'ContractDefinition',
        src: '250:4725:28',
        nodes: [
          {
            id: 29360,
            nodeType: 'EventDefinition',
            src: '378:82:28',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 29352,
              nodeType: 'StructuredDocumentation',
              src: '285:88:28',
              text: ' @dev Emitted when `tokenId` token is transferred from `from` to `to`.',
            },
            eventSelector: 'ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
            name: 'Transfer',
            nameLocation: '384:8:28',
            parameters: {
              id: 29359,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29354,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '409:4:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29360,
                  src: '393:20:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29353,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '393:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29356,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '431:2:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29360,
                  src: '415:18:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29355,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '415:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29358,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '451:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29360,
                  src: '435:23:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29357,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '435:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '392:67:28',
            },
          },
          {
            id: 29369,
            nodeType: 'EventDefinition',
            src: '565:89:28',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 29361,
              nodeType: 'StructuredDocumentation',
              src: '466:94:28',
              text: ' @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.',
            },
            eventSelector: '8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925',
            name: 'Approval',
            nameLocation: '571:8:28',
            parameters: {
              id: 29368,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29363,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'owner',
                  nameLocation: '596:5:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29369,
                  src: '580:21:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29362,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '580:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29365,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'approved',
                  nameLocation: '619:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29369,
                  src: '603:24:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29364,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '603:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29367,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '645:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29369,
                  src: '629:23:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29366,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '629:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '579:74:28',
            },
          },
          {
            id: 29378,
            nodeType: 'EventDefinition',
            src: '782:85:28',
            nodes: [],
            anonymous: false,
            documentation: {
              id: 29370,
              nodeType: 'StructuredDocumentation',
              src: '660:117:28',
              text: ' @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.',
            },
            eventSelector: '17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31',
            name: 'ApprovalForAll',
            nameLocation: '788:14:28',
            parameters: {
              id: 29377,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29372,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'owner',
                  nameLocation: '819:5:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29378,
                  src: '803:21:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29371,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '803:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29374,
                  indexed: true,
                  mutability: 'mutable',
                  name: 'operator',
                  nameLocation: '842:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29378,
                  src: '826:24:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29373,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '826:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29376,
                  indexed: false,
                  mutability: 'mutable',
                  name: 'approved',
                  nameLocation: '857:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29378,
                  src: '852:13:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_bool',
                    typeString: 'bool',
                  },
                  typeName: {
                    id: 29375,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '852:4:28',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '802:64:28',
            },
          },
          {
            id: 29386,
            nodeType: 'FunctionDefinition',
            src: '954:74:28',
            nodes: [],
            documentation: {
              id: 29379,
              nodeType: 'StructuredDocumentation',
              src: '873:76:28',
              text: " @dev Returns the number of tokens in ``owner``'s account.",
            },
            functionSelector: '70a08231',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'balanceOf',
            nameLocation: '963:9:28',
            parameters: {
              id: 29382,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29381,
                  mutability: 'mutable',
                  name: 'owner',
                  nameLocation: '981:5:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29386,
                  src: '973:13:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29380,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '973:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '972:15:28',
            },
            returnParameters: {
              id: 29385,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29384,
                  mutability: 'mutable',
                  name: 'balance',
                  nameLocation: '1019:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29386,
                  src: '1011:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29383,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1011:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1010:17:28',
            },
            scope: 29461,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29394,
            nodeType: 'FunctionDefinition',
            src: '1170:72:28',
            nodes: [],
            documentation: {
              id: 29387,
              nodeType: 'StructuredDocumentation',
              src: '1034:131:28',
              text: ' @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist.',
            },
            functionSelector: '6352211e',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'ownerOf',
            nameLocation: '1179:7:28',
            parameters: {
              id: 29390,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29389,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1195:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29394,
                  src: '1187:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29388,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1187:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1186:17:28',
            },
            returnParameters: {
              id: 29393,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29392,
                  mutability: 'mutable',
                  name: 'owner',
                  nameLocation: '1235:5:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29394,
                  src: '1227:13:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29391,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1227:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1226:15:28',
            },
            scope: 29461,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29406,
            nodeType: 'FunctionDefinition',
            src: '1809:137:28',
            nodes: [],
            documentation: {
              id: 29395,
              nodeType: 'StructuredDocumentation',
              src: '1248:556:28',
              text: ' @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event.',
            },
            functionSelector: 'b88d4fde',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'safeTransferFrom',
            nameLocation: '1818:16:28',
            parameters: {
              id: 29404,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29397,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '1852:4:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29406,
                  src: '1844:12:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29396,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1844:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29399,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '1874:2:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29406,
                  src: '1866:10:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29398,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '1866:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29401,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '1894:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29406,
                  src: '1886:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29400,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '1886:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29403,
                  mutability: 'mutable',
                  name: 'data',
                  nameLocation: '1926:4:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29406,
                  src: '1911:19:28',
                  stateVariable: false,
                  storageLocation: 'calldata',
                  typeDescriptions: {
                    typeIdentifier: 't_bytes_calldata_ptr',
                    typeString: 'bytes',
                  },
                  typeName: {
                    id: 29402,
                    name: 'bytes',
                    nodeType: 'ElementaryTypeName',
                    src: '1911:5:28',
                    typeDescriptions: {
                      typeIdentifier: 't_bytes_storage_ptr',
                      typeString: 'bytes',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '1834:102:28',
            },
            returnParameters: {
              id: 29405,
              nodeType: 'ParameterList',
              parameters: [],
              src: '1945:0:28',
            },
            scope: 29461,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29416,
            nodeType: 'FunctionDefinition',
            src: '2644:108:28',
            nodes: [],
            documentation: {
              id: 29407,
              nodeType: 'StructuredDocumentation',
              src: '1952:687:28',
              text: ' @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event.',
            },
            functionSelector: '42842e0e',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'safeTransferFrom',
            nameLocation: '2653:16:28',
            parameters: {
              id: 29414,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29409,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '2687:4:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29416,
                  src: '2679:12:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29408,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2679:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29411,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '2709:2:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29416,
                  src: '2701:10:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29410,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '2701:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29413,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '2729:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29416,
                  src: '2721:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29412,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '2721:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '2669:73:28',
            },
            returnParameters: {
              id: 29415,
              nodeType: 'ParameterList',
              parameters: [],
              src: '2751:0:28',
            },
            scope: 29461,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29426,
            nodeType: 'FunctionDefinition',
            src: '3495:104:28',
            nodes: [],
            documentation: {
              id: 29417,
              nodeType: 'StructuredDocumentation',
              src: '2758:732:28',
              text: ' @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event.',
            },
            functionSelector: '23b872dd',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'transferFrom',
            nameLocation: '3504:12:28',
            parameters: {
              id: 29424,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29419,
                  mutability: 'mutable',
                  name: 'from',
                  nameLocation: '3534:4:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29426,
                  src: '3526:12:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29418,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3526:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29421,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '3556:2:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29426,
                  src: '3548:10:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29420,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '3548:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29423,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '3576:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29426,
                  src: '3568:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29422,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '3568:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '3516:73:28',
            },
            returnParameters: {
              id: 29425,
              nodeType: 'ParameterList',
              parameters: [],
              src: '3598:0:28',
            },
            scope: 29461,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29434,
            nodeType: 'FunctionDefinition',
            src: '4062:55:28',
            nodes: [],
            documentation: {
              id: 29427,
              nodeType: 'StructuredDocumentation',
              src: '3605:452:28',
              text: ' @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event.',
            },
            functionSelector: '095ea7b3',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'approve',
            nameLocation: '4071:7:28',
            parameters: {
              id: 29432,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29429,
                  mutability: 'mutable',
                  name: 'to',
                  nameLocation: '4087:2:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29434,
                  src: '4079:10:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29428,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4079:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29431,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '4099:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29434,
                  src: '4091:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29430,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4091:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4078:29:28',
            },
            returnParameters: {
              id: 29433,
              nodeType: 'ParameterList',
              parameters: [],
              src: '4116:0:28',
            },
            scope: 29461,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29442,
            nodeType: 'FunctionDefinition',
            src: '4437:70:28',
            nodes: [],
            documentation: {
              id: 29435,
              nodeType: 'StructuredDocumentation',
              src: '4123:309:28',
              text: ' @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event.',
            },
            functionSelector: 'a22cb465',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'setApprovalForAll',
            nameLocation: '4446:17:28',
            parameters: {
              id: 29440,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29437,
                  mutability: 'mutable',
                  name: 'operator',
                  nameLocation: '4472:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29442,
                  src: '4464:16:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29436,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4464:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29439,
                  mutability: 'mutable',
                  name: '_approved',
                  nameLocation: '4487:9:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29442,
                  src: '4482:14:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_bool',
                    typeString: 'bool',
                  },
                  typeName: {
                    id: 29438,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '4482:4:28',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4463:34:28',
            },
            returnParameters: {
              id: 29441,
              nodeType: 'ParameterList',
              parameters: [],
              src: '4506:0:28',
            },
            scope: 29461,
            stateMutability: 'nonpayable',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29450,
            nodeType: 'FunctionDefinition',
            src: '4657:79:28',
            nodes: [],
            documentation: {
              id: 29443,
              nodeType: 'StructuredDocumentation',
              src: '4513:139:28',
              text: ' @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist.',
            },
            functionSelector: '081812fc',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'getApproved',
            nameLocation: '4666:11:28',
            parameters: {
              id: 29446,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29445,
                  mutability: 'mutable',
                  name: 'tokenId',
                  nameLocation: '4686:7:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29450,
                  src: '4678:15:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_uint256',
                    typeString: 'uint256',
                  },
                  typeName: {
                    id: 29444,
                    name: 'uint256',
                    nodeType: 'ElementaryTypeName',
                    src: '4678:7:28',
                    typeDescriptions: {
                      typeIdentifier: 't_uint256',
                      typeString: 'uint256',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4677:17:28',
            },
            returnParameters: {
              id: 29449,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29448,
                  mutability: 'mutable',
                  name: 'operator',
                  nameLocation: '4726:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29450,
                  src: '4718:16:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29447,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4718:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4717:18:28',
            },
            scope: 29461,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
          {
            id: 29460,
            nodeType: 'FunctionDefinition',
            src: '4885:88:28',
            nodes: [],
            documentation: {
              id: 29451,
              nodeType: 'StructuredDocumentation',
              src: '4742:138:28',
              text: ' @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}',
            },
            functionSelector: 'e985e9c5',
            implemented: false,
            kind: 'function',
            modifiers: [],
            name: 'isApprovedForAll',
            nameLocation: '4894:16:28',
            parameters: {
              id: 29456,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29453,
                  mutability: 'mutable',
                  name: 'owner',
                  nameLocation: '4919:5:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29460,
                  src: '4911:13:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29452,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4911:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
                {
                  constant: false,
                  id: 29455,
                  mutability: 'mutable',
                  name: 'operator',
                  nameLocation: '4934:8:28',
                  nodeType: 'VariableDeclaration',
                  scope: 29460,
                  src: '4926:16:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_address',
                    typeString: 'address',
                  },
                  typeName: {
                    id: 29454,
                    name: 'address',
                    nodeType: 'ElementaryTypeName',
                    src: '4926:7:28',
                    stateMutability: 'nonpayable',
                    typeDescriptions: {
                      typeIdentifier: 't_address',
                      typeString: 'address',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4910:33:28',
            },
            returnParameters: {
              id: 29459,
              nodeType: 'ParameterList',
              parameters: [
                {
                  constant: false,
                  id: 29458,
                  mutability: 'mutable',
                  name: '',
                  nameLocation: '-1:-1:-1',
                  nodeType: 'VariableDeclaration',
                  scope: 29460,
                  src: '4967:4:28',
                  stateVariable: false,
                  storageLocation: 'default',
                  typeDescriptions: {
                    typeIdentifier: 't_bool',
                    typeString: 'bool',
                  },
                  typeName: {
                    id: 29457,
                    name: 'bool',
                    nodeType: 'ElementaryTypeName',
                    src: '4967:4:28',
                    typeDescriptions: {
                      typeIdentifier: 't_bool',
                      typeString: 'bool',
                    },
                  },
                  visibility: 'internal',
                },
              ],
              src: '4966:6:28',
            },
            scope: 29461,
            stateMutability: 'view',
            virtual: false,
            visibility: 'external',
          },
        ],
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 29350,
              name: 'IERC165',
              nodeType: 'IdentifierPath',
              referencedDeclaration: 30232,
              src: '271:7:28',
            },
            id: 29351,
            nodeType: 'InheritanceSpecifier',
            src: '271:7:28',
          },
        ],
        canonicalName: 'IERC721',
        contractDependencies: [],
        contractKind: 'interface',
        documentation: {
          id: 29349,
          nodeType: 'StructuredDocumentation',
          src: '182:67:28',
          text: ' @dev Required interface of an ERC721 compliant contract.',
        },
        fullyImplemented: false,
        linearizedBaseContracts: [29461, 30232],
        name: 'IERC721',
        nameLocation: '260:7:28',
        scope: 29462,
        usedErrors: [],
      },
    ],
    license: 'MIT',
  },
  id: 28,
};
